package batalhanaval;

import java.awt.Point;
import java.util.ArrayList;

public class Robo extends Jogador {
	
	public static final int ACERTOU_AGUA = 0;
	public static final int ACERTOU_NAVIO = 1;
	
	public static final int PERDIDO = -1;
	public static final int NORTE = 0;
	public static final int SUL = 1;
	public static final int LESTE = 2;
	public static final int OESTE = 3;

	private int estado;
	private int direcao;
	private Point ultimoAcerto;
	private ArrayList<Point> naviosAcertados;
	
	public Robo(Jogo jogo) {
		super(jogo);
		
		direcao = PERDIDO;
		naviosAcertados = new ArrayList<Point>();
		
		for (Navio navio : getFrota()) {
			posicionaNavio(navio);
		}
	}
	
	public int atira (){
		if (getJogo().getDificuldade()==Jogo.FACIL){
			return super.atira();
		}else if(getJogo().getDificuldade()==Jogo.MEDIO){
			int i = (int)Math.random()*2;
			if (i==1){
				return super.atira();
			}
		//	return atiraInteligente(); 
		}
		return atiraInteligente();
	}
	
	private void posicionaNavio(Navio n) {
		int x = (int) (Math.random() * 10);
		int y = (int) (Math.random() * 10);
		int orientacao = (int) (Math.random() * 2);

		Point pos = new Point(x, y);
		n.setPosicao(pos);
		n.setOrientacao(orientacao);
		if (!getTabuleiro().cabeNavio(n)) {
			posicionaNavio(n);
		} else{
			getTabuleiro().adicionaNavio(n);
		}
	}
	
	private int atiraInteligente(){
		if (estado == 0){			
			int res = super.atira();
			
			if (res != 1) {
				estado = ACERTOU_NAVIO;
				ultimoAcerto = getTiros().get(getTiros().size()-1);
				naviosAcertados.add(ultimoAcerto);
			}
			return res;
		} else {			
			int y = ultimoAcerto.y;
			int x = ultimoAcerto.x;

			do {
				if (direcao == PERDIDO){
					direcao = (int)(Math.random()*4);
				}
				switch (direcao) {
				case NORTE:
					y -= 1;				
					break;
				case SUL:
					y += 1;				
					break;
				case LESTE:
					x += 1;				
					break;
				case OESTE:
					x -= 1;				
					break;
				}
				if(!getTabuleiro().posicaoValida(x, y)){
					direcao = PERDIDO;
				}
			} while (!getOponente().getTabuleiro().posicaoValida(x, y));
			
			try {
				int res = super.atira(x, y);
				if (res > 1) {
					ultimoAcerto = getTiros().get(getTiros().size()-1);
				} else {
					estado = ACERTOU_AGUA;
					direcao = PERDIDO;
				}
				return res;
				
			} catch (Exception e) {	return 0; }
		
		}
	}
}
