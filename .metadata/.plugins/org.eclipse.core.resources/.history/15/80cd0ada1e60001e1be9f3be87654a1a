package batalhanaval.gui;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.io.File;
import java.io.IOException;

import javax.imageio.ImageIO;
import javax.swing.BorderFactory;
import javax.swing.JPanel;

import batalhanaval.*;

@SuppressWarnings("serial")
public class PainelGrade extends JPanel {
	JanelaPrincipal principal;
	Image agua, fogo, fundo;
	Dimension dim;
	Rectangle clip;
	Point posicaoAtual;

	public PainelGrade(JanelaPrincipal p, Jogador j, String imgFundo) {
		principal = p;
		Dimension dim = new Dimension(300, 300);
		setPreferredSize(dim);
		// setBackground(Color.BLUE);
		//setBorder(BorderFactory.createLineBorder(Color.BLUE));

		clip = new Rectangle(dim);
		posicaoAtual = new Point(0, 0);

		TratadorMouse tm = new TratadorMouse();
		addMouseListener(tm);
		addMouseMotionListener(tm);

		// Carrega as imagens do disco
		try {
			agua = ImageIO.read(new File("." + File.separator + "img"
					+ File.separator + "agua.png"));
			fogo = ImageIO.read(new File("." + File.separator + "img"
					+ File.separator + "fogo.png"));
			fundo = ImageIO.read(new File("." + File.separator + "img"
					+ File.separator + imgFundo));

		} catch (IOException e) {
			System.err.println(e.getLocalizedMessage());
		}
	}

	@Override
	public void paintComponent(Graphics g) {
		super.paintComponent(g);
		g.drawImage(fundo, 0, 0, null);
		g.setColor(Color.BLUE);
		g.drawRect(0, 0, 300, 300);
		for (int i = 1; i < 11; i++) {
			g.drawLine(i * 30, 0, i * 30, 300);
			g.drawLine(0, i * 30, 300, i * 30);
		}

		clip.setSize(30, 30);
		clip.setLocation(posicaoAtual.x*30, posicaoAtual.y*30);
		g.setClip(clip);

		g.drawImage(agua, 0, 0, null);
		g.drawImage(fogo, posicaoAtual.x*30, posicaoAtual.y*30, null);
	}

	private class TratadorMouse implements MouseListener, MouseMotionListener {
		@Override
		public void mouseClicked(MouseEvent e) {
			principal.caixaEventos.setText("Mouse clicado: " + e.getX() / 30 + ","
					+ e.getY() / 30);
		}

		@Override
		public void mouseMoved(MouseEvent e) {
			Point pos = PainelGrade.this.posicaoAtual;
			if (pos.x != e.getX() || pos.y != e.getY()) {
				PainelGrade.this.posicaoAtual = new Point(e.getX()/30, e.getY()/30);
				PainelGrade.this.repaint();
			}
		}

		@Override
		public void mouseEntered(MouseEvent e) {}
		@Override
		public void mouseExited(MouseEvent e) {}
		@Override
		public void mousePressed(MouseEvent e) {}
		@Override
		public void mouseReleased(MouseEvent e) {}
		@Override
		public void mouseDragged(MouseEvent e) {}
}
}
