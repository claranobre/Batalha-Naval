package batalhanaval;

import java.awt.Point;
import java.util.ArrayList;

/**
 * Jogador de batalha naval.
 * 
 * @param jogo
 * 
 */

public class Jogador {
	private Jogo jogo;
	private Tabuleiro tabuleiro;
	private Navio[] frota;
	
	private ArrayList<Integer> tiros; 

	private int frotaIntacta;
	
	/**
	 * Cria um novo jogador para o jogo.
	 * 
	 * @param jogo Jogo do qual o jogador participa.
	 */
	
	public Jogador(Jogo jogo) {
		this.jogo = jogo;
		this.tabuleiro = new Tabuleiro(); // Tabuleiro zerado
		this.frota = new Navio[5];
		
		this.tiros = new ArrayList<Integer>();
		
		frota[0] = new BarcoPatrulha(this);
		frota[1] = new Submarino	(this);
		frota[2] = new Destroier 	(this);
		frota[3] = new Encouracado	(this);
		frota[4] = new PortaAvioes	(this);
	}

	/**
	 * Atira num ponto determinado.
	 * 
	 * @param linha
	 * @param coluna
	 */
	public void atira(int linha, int coluna) {
		int valorAtual = jogo.getOponente(this).getTabuleiro().getXY(linha, coluna);
		
		// Quadrado nao atingido?
		if (valorAtual == 0 || valorAtual > 1) {
			tiros.add(valorAtual);
			
			if (valorAtual == 0)
				jogo.getOponente(this).getTabuleiro().setXY(linha, coluna, 1);
			else if (valorAtual > 1) {
				jogo.getOponente(this).getTabuleiro().setXY(linha, coluna, -valorAtual);
//				
//				Point[] pos = jogo.getOponente(this).getNavio(valorAtual).getPosicao();
//				for (int i = 0; i < pos.length; i++)
//					if (jogador.getTabuleiro().getXY(pos[i].x, pos[i].y) > 0)
						
			}
		}
	}

	/**
	 * 
	 * Atira automaticamente, atraves de inteligencia
	 * artificial.
	 * 
	 */
	public void atira() {
		
	}

	public Tabuleiro getTabuleiro () {
		return tabuleiro;
	}
	
	public Navio getNavio(int id) {
		for (int i = 0; i < frota.length; i++) {
			if (frota[i].getId() == id) return frota[i];
		}
		return null;
	}
	
	public Jogo getJogo() {
		return jogo;
	}
	
	public void posicionaNavio (Point[] pos, int n) {
		frota[n].setPosicao(pos);
	}
}
